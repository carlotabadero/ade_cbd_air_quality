{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Analysis on Adelaide CBD Air Quality Data\"\noutput:\n  html_notebook: default\n  pdf_document: default\n  word_document: default\n---\n\n# Background\nThe Environment Protection Authority (EPA) monitors South Australian airsheds in order to assess the air quality and provide information that can be used to guide management decisions. This data set contains validated particle pollution data for the Adelaide CBD region. This site was commissioned in April 2014. \n\nSet-up libraries:\n```{r set-up, results=FALSE}\nlibrary(\"tidyverse\")\nlibrary(\"lubridate\", \"dplyr\", \"forcats\")\n```\n\n\nFirst we should load all the datasets from [data.sa.au](https://data.sa.gov.au/data/dataset/adelaide-cbd-air-quality-monitoring-station-particle)\nWe got 36 data sets representing 36 months from  April 2014 up to March 2017. We have placed them all in a folder and in the code below, we will merge them into one dataset.\n```{r load}\n# Writing the function \"multmerge\" to merge multiple datasets. It takes the path of the input files (mypath) and ouput file (output_file) as arguments.\n\nmultmerge <- function(mypath,output_file) {\n  filenames = list.files(path = mypath, full.names = TRUE)\n  DF <-  read.csv(filenames[1])\n  for (f in filenames[-1]) DF <- rbind(DF, read.csv(f))   \n  write.csv(DF, output_file, row.names=FALSE, quote=FALSE)\n}\n\nmultmerge(mypath = \"./ADL07p\", output_file = \"particle.csv\")\n\nparticle <- read.csv(\"particle.csv\")\n```\n\nLet's see what we got:\n```{r}\nstr(particle)\n```\nField labels: PM10 BAM ug/m3 – Particulate Matter 10 microns or less, PM2.5 BAM ug/m3 – Particulate Matter 2.5 microns or less, Temperature Deg C – Ambient Temperature, Barometric Pressure atm – Ambient Pressure. Data was collected as 10 minute averages. Information provided is PM10 and PM2.5 values expressed in micrograms per cubic metre (ug/m3), Ambient Temperature expressed in Degrees Celsius (Deg C) & Ambient Barometric Pressure expressed in Atmospheres (atm). Time is expressed as Time Ending Averages.\n\n\n# Data Exploration\n\nWe should organize the dates to its proper format and rename the columns for easy access.\nWe also separate a column for each the components of time like year, month, days of the week and hour of the day.\n```{r, echo=FALSE, results=FALSE}\n\ncolnames(particle) <- c(\"date_time\", \"pm10\", \"pm2.5\", \"temp\", \"bar\")\n\nparticle <- mutate(particle, date_time = dmy_hm(particle$date, tz = \"Australia/Adelaide\"), year = year(date_time), month = month(date_time), wday = wday(date_time),hour = hour(date_time))\n\nhead(particle)\n```\n```{r}\nsummarise(particle, avg_pm10 = mean(pm10, na.rm =TRUE), avg_pm2.5 = mean(pm2.5, na.rm = TRUE))\n```\n\n\n\nNow, let's see what hours have the highest particulate matter(PM). To simplify our analysis, we choose to focus first on PM10 variable.\n```{r}\nggplot(particle, mapping = aes(x=hour, y=pm10)) +\n  geom_point(position = \"jitter\", na.rm = TRUE, alpha = 1/10)+\n  geom_smooth(na.rm = TRUE)+\n  scale_x_continuous(breaks = c(0:23))\n```\nThis plot does not show clearly the fluctuation of PM per hour. Perhaps, if we cluster our data per month and take the averages of particular hour, we can see a pattern.\n\n\n```{r}\neveryday = seq(from=as.Date('2005-1-1'),to=as.Date('2005-12-31'),by='month')\nmonth_array = format(everyday, '%b')\n\nby_hour <- particle %>% \n  mutate(fmonth = month_array[month], week = week(date_time)) %>% \n  group_by(year, fmonth, hour) %>%\n  summarise(avg_pm10 = mean(pm10, na.rm = TRUE))\n\nggplot(by_hour, mapping = aes(x=hour, y=avg_pm10)) +\n  geom_point( na.rm = TRUE)+\n  geom_smooth(na.rm = TRUE)+\n  scale_x_continuous(breaks = c(0:23))\n\n```\n__The plot above suggests that there are most PM10 in the air on average during the day from 1pm to around 2pm then gradually lessens until when the air is cleanest at around 3am to 4am.__\n\n\nSome months have pretty high average hourly rates so we can suspect that the season and time of the year has and effect on it. Let's try color-coding the plot by month and see if there is a pattern.\n\n```{r}\nby_hour$nmonth <- NULL\nby_hour$nmonth = factor(by_hour$fmonth, levels = month_array)\n\nggplot(by_hour, mapping = aes(x=hour, y=avg_pm10)) +\n  geom_point(aes(color = nmonth), na.rm = TRUE)+\n  geom_smooth(na.rm = TRUE)+\n   scale_x_continuous(breaks = c(0:23))\n```\nWe can observe in the plot above that the months of November to January have higher PM rating than the other months. __We can theorise that there is a relationship of season being dry or wet on the air quality.__ To prove this theory, we have to group our months by season:\n```{r}\n# Adding a \"season\" variable into our dataset\nseason_array <- c(\"Jan\" = \"Summer\",\n                  \"Feb\" = \"Summer\",\n                  \"Mar\" = \"Autumn\",\n                  \"Apr\" = \"Autumn\",\n                  \"May\" = \"Autumn\",\n                  \"Jun\" = \"Winter\",\n                  \"Jul\" = \"Winter\",\n                  \"Aug\" = \"Winter\",\n                  \"Sep\"= \"Spring\",\n                  \"Oct\" = \"Spring\",\n                  \"Nov\" = \"Spring\",\n                  \"Dec\" = \"Summer\")\n\nparticle$season <- NULL\n\nparticle <- particle %>% \n  mutate(fmonth = month_array[month], season = season_array[fmonth])\n\nseason_order <- c(\"Summer\", \"Autumn\", \"Winter\", \"Spring\")\n\n# Grouping by hour and plotting\nby_hour <- particle %>% \n    filter(!is.na(season)) %>% \n    group_by(year, season, fmonth,hour) %>%\n    summarise( avg_pm10 = mean(pm10, na.rm = TRUE))\n\nggplot(by_hour, mapping = aes(x=hour, y=avg_pm10),  na.rm = TRUE) +\n  geom_point(aes(colour = season), na.rm = TRUE)+\n  geom_smooth(aes(colour = season), na.rm = TRUE, se = FALSE)+\n  scale_x_continuous(breaks = c(0:23))\n```\nOur hypothesis is confirmed: __there is seasonal pattern affecting air quality in Adelaide CBD.__ Although we have to dig further to find out what factors in the season that affect the air quality.\n\nThis time, we are now interested in translating our findings into numbers.\n```{r}\n# What is the overall average air quality?\nsummarise(particle, avg_pm10 = mean(pm10, na.rm = TRUE), avg_pm2.5 = mean(pm2.5, na.rm = TRUE))\navg_pm10 <- mean(particle$pm10, na.rm = TRUE)\navg_pm2.5 <- mean(particle$pm2.5, na.rm = TRUE)\n```\n```{r}\n# Compare the differences of the average air quality per season\n# Summarise by season\nby_season <- particle %>%\n  filter(!is.na(season)) %>% \n  group_by(season) %>% \n  summarise(avg_pm10_season = mean(pm10, na.rm = TRUE), avg_pm2.5_season = mean(pm2.5, na.rm = TRUE))\n\n# Compute for percentage mean comparison to total data\nby_season <- by_season %>% \n  mutate(perc_delta_pm10 = (avg_pm10_season - avg_pm10)/avg_pm10, perc_delta_pm2.5 = (avg_pm2.5_season - avg_pm2.5)/avg_pm2.5)\n\n# Reorder columns\nby_season <- by_season[,c(\"season\",\"avg_pm10_season\",\"perc_delta_pm10\",\"avg_pm2.5_season\",\"perc_delta_pm2.5\")]\n\n# Display\nby_season\n```\n\n\n\nWe also like to investigate how our data in Adelaide CBD compare to acceptable healthy measurements.",
    "created" : 1495009793948.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2744010131",
    "id" : "D984E167",
    "lastKnownWriteTime" : 1495244644,
    "last_content_update" : 1495244644114,
    "path" : "~/R_projects/ade_cbd_particle/ade_cbd_particle.Rmd",
    "project_path" : "ade_cbd_particle.Rmd",
    "properties" : {
        "chunk_output_type" : "inline",
        "docOutlineVisible" : "0",
        "source_window_id" : "w714dby6lbz03",
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}